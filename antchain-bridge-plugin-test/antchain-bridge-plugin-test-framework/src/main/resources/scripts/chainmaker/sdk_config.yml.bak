chain_client:
  # 链ID
  chain_id: "chain1"
  # 组织ID
  org_id: "wx-org1.chainmaker.org"
  # 客户端用户私钥路径
  user_key_file_path: "/tmp/chainmaker/chainmaker-go/build/release/chainmaker-v3.0.0-wx-org1.chainmaker.org/config/wx-org1.chainmaker.org/certs/user/client1/client1.tls.key"
  # 客户端用户证书路径
  user_crt_file_path: "/tmp/chainmaker/chainmaker-go/build/release/chainmaker-v3.0.0-wx-org1.chainmaker.org/config/wx-org1.chainmaker.org/certs/user/client1/client1.tls.crt"
  # 客户端用户交易签名私钥路径
  user_sign_key_file_path: "/tmp/chainmaker/chainmaker-go/build/release/chainmaker-v3.0.0-wx-org1.chainmaker.org/config/wx-org1.chainmaker.org/certs/user/client1/client1.sign.key"
  # 客户端用户交易签名证书路径
  user_sign_crt_file_path: "/tmp/chainmaker/chainmaker-go/build/release/chainmaker-v3.0.0-wx-org1.chainmaker.org/config/wx-org1.chainmaker.org/certs/user/client1/client1.sign.crt"
  # 同步交易结果模式下，轮训获取交易结果时的最大轮训次数，删除此项或设为<=0则使用默认值 10
  retry_limit: 10
  # 同步交易结果模式下，每次轮训交易结果时的等待时间，单位：ms 删除此项或设为<=0则使用默认值 500
  retry_interval: 500
  # 当前签名证书的别名。当设置此配置项时，chain client 对象将自动检查链上是否已添加此别名，如果没有则自动上链此证书别名，
  # 并且后续所有交易都会使用别名，别名可降低交易体大小。若为空则不启用。
  #  alias: mycert5

  nodes:
    - # 节点地址，格式为：IP:端口:连接数
      node_addr: "127.0.0.1:12301"
      # RPC连接是否启用双向TLS认证
      enable_tls: true
      # 信任证书池路径
      trust_root_paths:
        - "/tmp/chainmaker/chainmaker-go/build/release/chainmaker-v3.0.0-wx-org1.chainmaker.org/config/wx-org1.chainmaker.org/certs/ca/wx-org1.chainmaker.org"
        - "/tmp/chainmaker/chainmaker-go/build/release/chainmaker-v3.0.0-wx-org2.chainmaker.org/config/wx-org2.chainmaker.org/certs/ca/wx-org2.chainmaker.org"
      # TLS hostname
      tls_host_name: "chainmaker.org"
    - # 节点地址，格式为：IP:端口:连接数
      node_addr: "127.0.0.1:12302"
      # RPC连接是否启用双向TLS认证
      enable_tls: true
      # 信任证书池路径
      trust_root_paths:
        - "/tmp/chainmaker/chainmaker-go/build/release/chainmaker-v3.0.0-wx-org1.chainmaker.org/config/wx-org1.chainmaker.org/certs/ca/wx-org1.chainmaker.org"
        - "/tmp/chainmaker/chainmaker-go/build/release/chainmaker-v3.0.0-wx-org2.chainmaker.org/config/wx-org2.chainmaker.org/certs/ca/wx-org2.chainmaker.org"
      # TLS hostname
      tls_host_name: "chainmaker.org"
  archive:
    # mysql archivecenter 归档中心 数据归档链外存储相关配置
    type: "archivecenter"
    dest: "root:123456:localhost:3306"
    secret_key: xxx
  # 如果为true且归档中心配置打开,那么查询数据优先从归档中心查询
  # 如果是false,则不访问归档中心，只访问链数据
  archive_center_query_first: false
  #  # 归档中心
  #  archive_center_config:
  #    chain_genesis_hash: a23a0c6fd402010efbc31741b2a868c9e6558471fda1e8d1f16673ef683e06db
  #    archive_center_http_url: http://127.0.0.1:13119
  #    request_second_limit: 10
  #    rpc_address: 127.0.0.1:13120
  #    tls_enable: false
  #    tls:
  #      server_name: archiveserver1.tls.wx-org.chainmaker.org
  #      priv_key_file: src/test/resources/archivecenter/archiveclient1.tls.key
  #      cert_file: src/test/resources/archivecenter/archiveclient1.tls.crt
  #      trust_ca_list:
  #        - src/test/resources/archivecenter/ca
  #    max_send_msg_size: 200
  #    max_recv_msg_size: 200

  rpc_client:
    # grpc客户端最大接受/发送容量(MB)
    max_receive_message_size: 100


  pkcs11:
    enabled: false # pkcs11 is not used by default

  # 交易结果是否订阅获取
  enable_tx_result_dispatcher: false

  ##连接池配置
  connPool:
    # 最大连接数
    maxTotal: 100
    # 最少空闲连接
    minIdle: 5
    #最大空闲连接
    maxIdle: 20
    #连接空闲最小保活时间，默认即为-1，单位：ms
    #当空闲的时间大于这个值时，强制移除该空闲对象
    minEvictableIdleTime: -1
    #连接空闲最小保活时间，默认即为30分钟(1800000)，单位：ms
    #当对象的空闲时间超过这个值，并且当前空闲对象的数量大于最小空闲数量(minIdle)时，执行移除操作
    softMinEvictableIdleTime: 1800000
    #回收空闲线程的执行周期，单位毫秒。默认值5分钟(300000） ，-1 表示不启用线程回收资源，单位：ms
    timeBetweenEvictionRuns: 300000
    #没有空闲连接时，获取连接是否阻塞
    blockWhenExhausted: true
    #当没有空闲连接时，获取连接阻塞等待时间，单位：ms
    maxWaitMillis: 11000
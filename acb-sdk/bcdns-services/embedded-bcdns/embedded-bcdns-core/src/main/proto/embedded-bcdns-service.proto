syntax = "proto3";

package com.alipay.antchain.bridge.bcdns.embedded.grpc;

option java_multiple_files = true;
option java_package = "com.alipay.antchain.bridge.bcdns.embedded.grpc";
option java_outer_classname = "EmbeddedBcdnsServiceOuter";

service EmbeddedBcdnsService {

  rpc heartbeat(HeartbeatRequest) returns (Response) {}

  rpc queryBCDNSTrustRootCertificate(Empty) returns (Response) {}

  rpc applyRelayerCertificate(ApplyRelayerCertificateReq) returns (Response) {}

  rpc queryRelayerCertificateApplicationResult(QueryRelayerCertApplicationResultReq) returns (Response) {}

  rpc applyPTCCertificate(ApplyPTCCertificateReq) returns (Response);

  rpc queryPTCCertificateApplicationResult(QueryPTCCertApplicationResultReq) returns (Response);

  rpc applyDomainNameCertificate(ApplyDomainNameCertificateReq) returns (Response);

  rpc queryDomainNameCertificateApplicationResult(QueryDomainNameCertApplicationResultReq) returns (Response);

  rpc queryRelayerCertificate(QueryRelayerCertificateReq) returns (Response) {};

  rpc queryPTCCertificate(QueryPTCCertificateReq) returns (Response) {};

  rpc queryDomainNameCertificate(QueryDomainNameCertificateReq) returns (Response) {};

  rpc registerDomainRouter(RegisterDomainRouterReq) returns (Response) {};

  rpc registerThirdPartyBlockchainTrustAnchor(RegisterThirdPartyBlockchainTrustAnchorReq) returns (Response) {};

  rpc queryDomainRouter(QueryDomainRouterReq) returns (Response) {};

  rpc queryThirdPartyBlockchainTrustAnchor(QueryThirdPartyBlockchainTrustAnchorReq) returns (Response) {};

  rpc queryPtcTrustRoot(QueryPtcTrustRootReq) returns (Response) {};

  rpc addPTCTrustRoot(AddPTCTrustRootReq) returns (Response) {};
}

message Empty {}

message Response {
  uint32 code = 1;
  string errorMsg = 2;
  oneof response {
    HeartbeatResponse heartbeatResp = 3;
    QueryBCDNSTrustRootCertificateResp queryBCDNSTrustRootCertificateResp = 4;
    ApplyRelayerCertificateResp applyRelayerCertificateResp = 5;
    ApplicationResult applicationResult = 6;
    ApplyPTCCertificateResp applyPTCCertificateResp = 7;
    ApplyDomainNameCertificateResp applyDomainNameCertificateResp = 8;
    QueryRelayerCertificateResp queryRelayerCertificateResp = 9;
    QueryPTCCertificateResp queryPTCCertificateResp = 10;
    QueryDomainNameCertificateResp queryDomainNameCertificateResp = 11;
    QueryDomainRouterResp queryDomainRouterResp = 12;
    QueryThirdPartyBlockchainTrustAnchorResp queryThirdPartyBlockchainTrustAnchorResp = 13;
    QueryPtcTrustRootResp queryPtcTrustRootResp = 14;
  }
}

message HeartbeatRequest {
}

message HeartbeatResponse {
}

message QueryBCDNSTrustRootCertificateResp {
  bytes bcdnsTrustRootCertificate = 1;
}

message ApplyRelayerCertificateReq {
  bytes certSigningRequest = 1;
}

message ApplyRelayerCertificateResp {
  string applyReceipt = 1;
}

message QueryRelayerCertApplicationResultReq {
  string applyReceipt = 1;
}

message ApplicationResult {
  bool isFinalResult = 1;
  bytes certificate = 2;
}

message ApplyPTCCertificateReq {
  bytes certSigningRequest = 1;
}

message ApplyPTCCertificateResp {
  string applyReceipt = 1;
}

message QueryPTCCertApplicationResultReq {
  string applyReceipt = 1;
}

message ApplyDomainNameCertificateReq {
  bytes certSigningRequest = 1;
}

message ApplyDomainNameCertificateResp {
  string applyReceipt = 1;
}

message QueryDomainNameCertApplicationResultReq {
  string applyReceipt = 1;
}

message QueryRelayerCertificateReq {
  string relayerCertId = 1;
  string name = 2;
  bytes applicant = 3;
}

message QueryRelayerCertificateResp {
  bool exist = 1;
  bytes certificate = 2;
}

message QueryPTCCertificateReq {
  string ptcCertId = 1;
  string name = 2;
  bytes applicant = 3;
}

message QueryPTCCertificateResp {
  bool exist = 1;
  bytes certificate = 2;
}

message QueryDomainNameCertificateReq {
  string domain = 1;
}

message QueryDomainNameCertificateResp {
  bool exist = 1;
  bytes certificate = 2;
}

message RegisterDomainRouterReq {
  bytes domainRouter = 1;
  bytes domainCert = 2;
}

message RegisterThirdPartyBlockchainTrustAnchorReq {
  bytes ptcId = 1;
  string domain = 2;
  bytes tpbta = 3;
}

message QueryDomainRouterReq {
  string destDomain = 1;
}

message QueryDomainRouterResp {
  bytes domainRouter = 1;
}

message QueryThirdPartyBlockchainTrustAnchorReq {
  string tpbtaLaneKey = 1;
  uint64 tpbtaVersion = 2;
}

message QueryThirdPartyBlockchainTrustAnchorResp {
  bytes tpbta = 1;
}

message QueryPtcTrustRootReq {
  bytes ptcOid = 1;
}

message QueryPtcTrustRootResp {
  bytes ptcTrustRoot = 1;
}

message AddPTCTrustRootReq {
  bytes ptcTrustRoot = 1;
}
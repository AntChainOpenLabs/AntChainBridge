package com.alipay.antchain.bridge.plugins.ethereum2;

import java.io.ByteArrayInputStream;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;

import cn.hutool.core.io.FileUtil;
import cn.hutool.core.util.*;
import cn.hutool.crypto.PemUtil;
import com.alipay.antchain.bridge.commons.core.am.AuthMessageFactory;
import com.alipay.antchain.bridge.commons.core.base.*;
import com.alipay.antchain.bridge.commons.core.bta.BlockchainTrustAnchorFactory;
import com.alipay.antchain.bridge.commons.core.bta.IBlockchainTrustAnchor;
import com.alipay.antchain.bridge.commons.utils.crypto.SignAlgoEnum;
import com.alipay.antchain.bridge.plugins.ethereum2.core.EthSubjectIdentity;
import com.alipay.antchain.bridge.plugins.ethereum2.tools.EthBbcTools;
import lombok.extern.slf4j.Slf4j;
import org.junit.Test;
import org.slf4j.Logger;
import org.web3j.utils.Numeric;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

@Slf4j
public class EthereumHcdvsTest {

    /**
     * <p>
     *     We provide the eth BBC {@link EthBbcTools tool} to generate something you going to need.
     *     Run this to generate the BTA subject identity for your ethereum network:
     * <blockquote><pre>
     *     java -cp target/ethereum2-acb-plugin-1.0.0-plugin.jar  com.alipay.antchain.bridge.plugins.ethereum2.tools.EthBbcTools buildEthSubjectIdentity private-net http://ip:33001 slot_number
     * </pre></blockquote>
     * </p>
     */
    private static final EthSubjectIdentity BTA_SUBJECT_IDENTITY = EthSubjectIdentity.fromJson(FileUtil.readString("bta-subject-id.json", StandardCharsets.UTF_8));

    private static final String AM_CONTRACT = "0xa9f0e4c3682af41abeeafa8c33dbd7dd4e8b52b5";

    private static final String CHAIN_DOMAIN = "test.domain";

    public static final byte[] RAW_PUBLIC_KEY = PemUtil.readPem(new ByteArrayInputStream(
                    ("""
                            -----BEGIN PUBLIC KEY-----
                            MFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAEULzSDPM4mhRkGpCiVirHZTWfzuZ/PfO6
                            +/RfVgGpZxs4EUQZhw5SnYWIwK99KxDPNxtYG7OEiWDA7+EKZUWBIw==
                            -----END PUBLIC KEY-----
                            """).getBytes()
            )
    );

    private static final ObjectIdentity oid = new X509PubkeyInfoObjectIdentity(RAW_PUBLIC_KEY);

    private static IBlockchainTrustAnchor BTA;

    // slot 55164
    private static final ConsensusState ANCHOR_CS = ConsensusState.decode(
            HexUtil.decodeHex("0000ab0a0000000002000000010002000300000000d77c030020000000667c35c386746e805ab9b862d0ef9e8b4b4c77f7f58749b9020a958944a453130400200000005a3f7fe07a67d31d1bc7c83792c8a8fc230d53b0b0ff1e881be819da35abd2360500080000000828f724940100000600950800007b22626561636f6e5f626c6f636b5f686561646572223a227b5c22736c6f745c223a5c2235353136345c222c5c2270726f706f7365725f696e6465785c223a5c2231385c222c5c22706172656e745f726f6f745c223a5c223078356133663766653037613637643331643162633763383337393263386138666332333064353362306230666631653838316265383139646133356162643233365c222c5c2273746174655f726f6f745c223a5c223078303136336165613866616232656139333263626236316337653934373138666538346130633764386332653235626266613433346135353961653532333537375c222c5c22626f64795f726f6f745c223a5c223078316464346233636366643730316434633830376632346431326230653836333564663863646534663636656237613562323136336666326436333532336532635c227d222c22616d5f636f6e7472616374223a22307861396630653463333638326166343161626565616661386333336462643764643465386235326235222c22657865637574696f6e5f7061796c6f61645f686561646572223a227b5c22706172656e745f686173685c223a5c223078396435613134396566626330613830633137653730363336323366396161323563333964383063666265363939366439666532653734323431633435353030645c222c5c226665655f726563697069656e745c223a5c223078383934333534353137373830366564313762396632336630613231656535393438656361613737365c222c5c2273746174655f726f6f745c223a5c223078653665666130313933393862316237323538613831613834313036356338346234313261666531363465303032633836393563313332343038346566613161625c222c5c2272656365697074735f726f6f745c223a5c223078353665383166313731626363353561366666383334356536393263306638366535623438653031623939366361646330303136323266623565333633623432315c222c5c226c6f67735f626c6f6f6d5c223a5cc222c5c22707265765f72616e64616f5c223a5c223078633961613062666363323761353633623430393063356631643136356231616163376261633764383933363330303631396131666236613233616339646164305c222c5c22626c6f636b5f6e756d6265725c223a5c2235353136345c222c5c226761735f6c696d69745c223a5c2233303030303030305c222c5c226761735f757365645c223a5c22305c222c5c2274696d657374616d705c223a5c22313733353738363936355c222c5c2265787472615f646174615c223a5c22307864383833303130653064383436373635373436383838363736663331326533323333326533343835366336393665373537385c222c5c22626173655f6665655f7065725f6761735c223a5c22375c222c5c22626c6f636b5f686173685c223a5c223078373831653436313238366537326661323438383134346435393838353336316537663034343639373530636332633866306535616337656237316634656563385c222c5c227472616e73616374696f6e735f726f6f745c223a5c223078376666653234316561363031383766646230313837626661323264653335643166396265643761623036316439343031666434376533346135346662656465315c222c5c227769746864726177616c735f726f6f745c223a5c223078373932393330626264356261616334336263633739386565343961613831383565663736626233623434626136326239316438366165353639653462623533355c222c5c22626c6f625f6761735f757365645c223a5c22305c222c5c226578636573735f626c6f625f6761735c223a5c22305c227d222c22657865637574696f6e5f7061796c6f61645f6272616e63686573223a5b22307834633531393238633861663836663964343532333261336630363266316332313434323565626232306530323030363636633435393630613334643734613131222c22307862343666306330313830356665323132653135393037393831623735376536633439366230636230363636343232343635353631336463656338323530356262222c22307864623536313134653030666464346331663835633839326266333561633961383932383961616563623165626430613936636465363036613734386235643731222c22307866623431343965646638333166383763626430366364666132383737366139393362333136663834363830666266313636356338386432303539636630353232225d7d0700000000000800990100007b2273796e635f616767726567617465223a227b5c2273796e635f636f6d6d69747465655f626974735c223a5c22307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665c222c5c2273796e635f636f6d6d69747465655f7369676e61747572655c223a5c2230783933626663623630373434643338383839643462616165316464363865336430383663303065336636386464353965326161333638356366643764353432646361656439613663303562346366626338373061333638306633623962613130663062373535383835383563343231373538643137663939343134653833346163366464333836373237623830393465393364333761623032643334336538333731383366376137653330613533316634393039333230326339653163636462395c227d227d")
    );

    // slot 55988
    private static final ConsensusState CS_WHERE_MSG1 = ConsensusState.decode(
            HexUtil.decodeHex("0000b00a0000000002000000010002000300000000dab4030020000000536ac173fe28b5c5d4df0a90a42fe0162411d50076c8a8d3f599ce624aacc461040020000000897f1ef28ef1474f011853e74d041b72e53452f2a94477ed2c99ca3078a4c44205000800000008098e259401000006009a0800007b22626561636f6e5f626c6f636b5f686561646572223a227b5c22736c6f745c223a5c2235353938385c222c5c2270726f706f7365725f696e6465785c223a5c2231385c222c5c22706172656e745f726f6f745c223a5c223078383937663165663238656631343734663031313835336537346430343162373265353334353266326139343437376564326339396361333037386134633434325c222c5c2273746174655f726f6f745c223a5c223078343161643663613937316531633330613637376166613533646466323162323364393034636130306539383230393532613762313834623366323236663865625c222c5c22626f64795f726f6f745c223a5c223078626338343333346138336434313732313932336437656330663637643438353130613336616264343337636565343466366163613535306239313635356137375c227d222c22616d5f636f6e7472616374223a22307861396630653463333638326166343161626565616661386333336462643764643465386235326235222c22657865637574696f6e5f7061796c6f61645f686561646572223a227b5c22706172656e745f686173685c223a5c223078613962346534323465626633613930363965643436623633313035353030363663646361666265623233626262353565353433643736626564653338616430305c222c5c226665655f726563697069656e745c223a5c223078383934333534353137373830366564313762396632336630613231656535393438656361613737365c222c5c2273746174655f726f6f745c223a5c223078343836396633663231366334306237333865623635366164373437666166303766383634393434363830666363653231316230653036306439633339366432305c222c5c2272656365697074735f726f6f745c223a5c223078633165643436383362653065303166306666653637373839656137626430346533643734306266306634653763623665663430383536663637663537343937365c222c5c226c6f67735f626c6f6f6d5c223a5cc222c5c22707265765f72616e64616f5c223a5c223078323065333464373265653333386264306464613932643933333336623935383832633936323062623936313065373636633762633436643264333434393566345c222c5c22626c6f636b5f6e756d6265725c223a5c2235353938385c222c5c226761735f6c696d69745c223a5c2233303030303030305c222c5c226761735f757365645c223a5c223131323630375c222c5c2274696d657374616d705c223a5c22313733353739363835335c222c5c2265787472615f646174615c223a5c22307864383833303130653064383436373635373436383838363736663331326533323333326533343835366336393665373537385c222c5c22626173655f6665655f7065725f6761735c223a5c22375c222c5c22626c6f636b5f686173685c223a5c223078386466343665336661316431303337643830323230343432653737396462363465366336316566613530343831616661653164383962613761303334656631615c222c5c227472616e73616374696f6e735f726f6f745c223a5c223078303935333765383139663430663732306235646535306138656530323166363961376464626634663962363261356432366264623462303731343264396164325c222c5c227769746864726177616c735f726f6f745c223a5c223078373932393330626264356261616334336263633739386565343961613831383565663736626233623434626136326239316438366165353639653462623533355c222c5c22626c6f625f6761735f757365645c223a5c22305c222c5c226578636573735f626c6f625f6761735c223a5c22305c227d222c22657865637574696f6e5f7061796c6f61645f6272616e63686573223a5b22307863386631353565313738633432633832663262356165626466323534363430393538396230633830323239383066343733303635343166353266376435646265222c22307862343666306330313830356665323132653135393037393831623735376536633439366230636230363636343232343635353631336463656338323530356262222c22307864623536313134653030666464346331663835633839326266333561633961383932383961616563623165626430613936636465363036613734386235643731222c22307830643131373739306538643035393436353037303131613762386130386535613663656634343765653438316365303834643331386562363338663730396162225d7d0700000000000800990100007b2273796e635f616767726567617465223a227b5c2273796e635f636f6d6d69747465655f626974735c223a5c22307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665c222c5c2273796e635f636f6d6d69747465655f7369676e61747572655c223a5c2230786237626532663433376266666563346561656337343763313831623135396333313035313639373861353639313963386266313134306134303935623338353763643731336665383639363539333230356633386136303734396362616335303066343538646133366433643161626434633636353364336436383833653539353239313463373066666637363833646530383538343263373335626137646263346535393739343466653831613566376438363466623561303536386435635c227d227d")
    );

    // slot 55987
    private static final ConsensusState PARENT_CS_WHERE_MSG1 = ConsensusState.decode(
            HexUtil.decodeHex("0000af0a0000000002000000010002000300000000dab3030020000000897f1ef28ef1474f011853e74d041b72e53452f2a94477ed2c99ca3078a4c442040020000000e311563a0da17fc6c76c1c2817c177bd1646446f4a37eb16824bca3c14f53f1505000800000028da8d25940100000600990800007b22626561636f6e5f626c6f636b5f686561646572223a227b5c22736c6f745c223a5c2235353938375c222c5c2270726f706f7365725f696e6465785c223a5c2232385c222c5c22706172656e745f726f6f745c223a5c223078653331313536336130646131376663366337366331633238313763313737626431363436343436663461333765623136383234626361336331346635336631355c222c5c2273746174655f726f6f745c223a5c223078323732643930343635393036636263313561326261313530363738626662616438636566393761376539653164336231326263633561333731373862623638395c222c5c22626f64795f726f6f745c223a5c223078336266386638326132656136623432303563386431316137646137336466366337353363313566383730366561623763656437316362343935666166663564375c227d222c22616d5f636f6e7472616374223a22307861396630653463333638326166343161626565616661386333336462643764643465386235326235222c22657865637574696f6e5f7061796c6f61645f686561646572223a227b5c22706172656e745f686173685c223a5c223078636639373266633561323234636233656538353365323965353962383765396465313330313235616132626134613033343365663531616230336231343837615c222c5c226665655f726563697069656e745c223a5c223078383934333534353137373830366564313762396632336630613231656535393438656361613737365c222c5c2273746174655f726f6f745c223a5c223078363364396530623430323031386238646162313031333732383764343837326236626436323162626161336564306534383035616562366463356433393337395c222c5c2272656365697074735f726f6f745c223a5c223078663138336433373533323962626464396532303937653635316563303532323466383733393036386537363964626330303933656263326364346461663564335c222c5c226c6f67735f626c6f6f6d5c223a5cc222c5c22707265765f72616e64616f5c223a5c223078333464653663643163313038393539353161383634656164313232623766343062393431393232633133356337636636623834373731346438353830393166355c222c5c22626c6f636b5f6e756d6265725c223a5c2235353938375c222c5c226761735f6c696d69745c223a5c2233303030303030305c222c5c226761735f757365645c223a5c2234363032395c222c5c2274696d657374616d705c223a5c22313733353739363834315c222c5c2265787472615f646174615c223a5c22307864383833303130653064383436373635373436383838363736663331326533323333326533343835366336393665373537385c222c5c22626173655f6665655f7065725f6761735c223a5c22375c222c5c22626c6f636b5f686173685c223a5c223078613962346534323465626633613930363965643436623633313035353030363663646361666265623233626262353565353433643736626564653338616430305c222c5c227472616e73616374696f6e735f726f6f745c223a5c223078323739643136376565636566666165383564373265313035336330363131356264313963623234303964313631353337393164613237323738326137343964345c222c5c227769746864726177616c735f726f6f745c223a5c223078373932393330626264356261616334336263633739386565343961613831383565663736626233623434626136326239316438366165353639653462623533355c222c5c22626c6f625f6761735f757365645c223a5c22305c222c5c226578636573735f626c6f625f6761735c223a5c22305c227d222c22657865637574696f6e5f7061796c6f61645f6272616e63686573223a5b22307832656431376330653534656230343664646366353931396638363266386433646465613662323661353663633731323161303531616534376337323132383236222c22307862343666306330313830356665323132653135393037393831623735376536633439366230636230363636343232343635353631336463656338323530356262222c22307864623536313134653030666464346331663835633839326266333561633961383932383961616563623165626430613936636465363036613734386235643731222c22307835633734613339653863646461643161623834316138343834623738363934613463633036613838333538646233313736643030353762393433386465653765225d7d0700000000000800990100007b2273796e635f616767726567617465223a227b5c2273796e635f636f6d6d69747465655f626974735c223a5c22307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665c222c5c2273796e635f636f6d6d69747465655f7369676e61747572655c223a5c2230783938663239633839353932393533643832313365306562396630383230366264353461393131616235386564613138323636613837333436343265616533303131653761653734666230316437393336333764393134633336396462353739613034303161356337663633646463633430623262343534633137323737316337376161333436643563666638346364393036303038366436383033333733303166316230653437623337373065363436663563613836343630623563616434645c227d227d")
    );

    private static final CrossChainMessage MSG1 = CrossChainMessage.decode(HexUtil.decodeHex("00004f0e0000000001000000000100080100000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e337aeff72656d6f7465446f6d61696e00000000000000000000000000000000ffffffffb0672f0f04811c754967ac24d249cf52c7f883f5f072692b4e8a32dc000000000000000000000000000000000000000000000000000000000000001a556e6f72646572656443726f7373436861696e4d65737361676500000000000000000000000000000000000000000000000000000000000000000000000000a400000000000000000000000000000000e83cda0f5059fa5f656fa11750a5dac01097b87d000000010200340d000000002e0d000000000300000000dab40100200000008df46e3fa1d1037d80220442e779db64e6c61efa50481afae1d89ba7a034ef1a02000800000008098e25940100000300b00400007b226c6f67496e646578223a302c2273656e64417574684d6573736167654c6f67223a7b2261646472657373223a22307861396630653463333638326166343161626565616661386333336462643764643465386235326235222c22626c6f636b48617368223a22307838646634366533666131643130333764383032323034343265373739646236346536633631656661353034383161666165316438396261376130333465663161222c22626c6f636b4e756d626572223a35353938382c22626c6f636b4e756d626572526177223a22307864616234222c2264617461223ac226c6f67496e646578223a302c226c6f67496e646578526177223a22307830222c2272656d6f766564223a66616c73652c22746f70696373223a5b22307837396237353136623162376136613339666234623762323265383636376364333734346535633237343235323932663861396634396431303432633063363531225d2c227472616e73616374696f6e48617368223a22307830333265323063636231333035333663643135393639383737666465306637396339343665633531336466323463373361363533613462663735636633353461222c227472616e73616374696f6e496e646578223a302c227472616e73616374696f6e496e646578526177223a22307830227d7d04000f0800007b2272656365697074496e646578223a302c2270726f6f6652656c617465644e6f646573223a5bd7d050020000000032e20ccb130536cd15969877fde0f79c946ec513df24c73a653a4bf75cf354a"));

    // slot 49152
    private static final ConsensusState CS_WHERE_PERIOD_END = ConsensusState.decode(
            HexUtil.decodeHex(FileUtil.readString("cs_where_period_end", StandardCharsets.UTF_8))
    );

    // slot 49151
    private static final ConsensusState PARENT_CS_WHERE_PERIOD_END = ConsensusState.decode(
            HexUtil.decodeHex("0000ab0a0000000002000000010002000300000000bfff030020000000fdbe3f6456a62e6dd1df177ce6abd8a1976864f16f72232a2ea2a74c84999fe6040020000000cbace1da9327272bcf8c6add6af9203d8512c468201a80a4aa304a82890a38d7050008000000a824aa20940100000600950800007b22626561636f6e5f626c6f636b5f686561646572223a227b5c22736c6f745c223a5c2234393135315c222c5c2270726f706f7365725f696e6465785c223a5c2231345c222c5c22706172656e745f726f6f745c223a5c223078636261636531646139333237323732626366386336616464366166393230336438353132633436383230316138306134616133303461383238393061333864375c222c5c2273746174655f726f6f745c223a5c223078613665643132333962393631383064326338333063623663633938356264356539663462383461616530643366653263653863306137346666636333313038315c222c5c22626f64795f726f6f745c223a5c223078343635303565333039393338393031353839316132306532626632616332303538366264303138653266653030393962393033633137393536366563356139385c227d222c22616d5f636f6e7472616374223a22307861396630653463333638326166343161626565616661386333336462643764643465386235326235222c22657865637574696f6e5f7061796c6f61645f686561646572223a227b5c22706172656e745f686173685c223a5c223078623032623234633732653961346135623231346333613335623763633636313037343337353733383366343034333962616466643437306161396164373961315c222c5c226665655f726563697069656e745c223a5c223078383934333534353137373830366564313762396632336630613231656535393438656361613737365c222c5c2273746174655f726f6f745c223a5c223078643532613636333633356337373930633965316537663635323234656664333265393432613564343865653166326433653365373933366464333731303831385c222c5c2272656365697074735f726f6f745c223a5c223078353665383166313731626363353561366666383334356536393263306638366535623438653031623939366361646330303136323266623565333633623432315c222c5c226c6f67735f626c6f6f6d5c223a5cc222c5c22707265765f72616e64616f5c223a5c223078653261633035316465613339643232346333623636346465616665336539396362383830303636303765633335613566396139336631636461396538613934365c222c5c22626c6f636b5f6e756d6265725c223a5c2234393135315c222c5c226761735f6c696d69745c223a5c2233303030303030305c222c5c226761735f757365645c223a5c22305c222c5c2274696d657374616d705c223a5c22313733353731343830395c222c5c2265787472615f646174615c223a5c22307864383833303130653064383436373635373436383838363736663331326533323333326533343835366336393665373537385c222c5c22626173655f6665655f7065725f6761735c223a5c22375c222c5c22626c6f636b5f686173685c223a5c223078386331343138383936396134393665653639633863306434663737363233643534666635623033646531643634386263333531656535653465323337643238315c222c5c227472616e73616374696f6e735f726f6f745c223a5c223078376666653234316561363031383766646230313837626661323264653335643166396265643761623036316439343031666434376533346135346662656465315c222c5c227769746864726177616c735f726f6f745c223a5c223078373932393330626264356261616334336263633739386565343961613831383565663736626233623434626136326239316438366165353639653462623533355c222c5c22626c6f625f6761735f757365645c223a5c22305c222c5c226578636573735f626c6f625f6761735c223a5c22305c227d222c22657865637574696f6e5f7061796c6f61645f6272616e63686573223a5b22307834333961633234643531323735343732623536383130656136376639663930643462396638326635346336613336653766616636363161383330626533373361222c22307862343666306330313830356665323132653135393037393831623735376536633439366230636230363636343232343635353631336463656338323530356262222c22307864623536313134653030666464346331663835633839326266333561633961383932383961616563623165626430613936636465363036613734386235643731222c22307835373737623430346134366163623262336337333236613535616334393639383561646531336533303436616633636363626131356563313664653439303631225d7d0700000000000800990100007b2273796e635f616767726567617465223a227b5c2273796e635f636f6d6d69747465655f626974735c223a5c22307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666665c222c5c2273796e635f636f6d6d69747465655f7369676e61747572655c223a5c2230786131646433333337393961393339353831336632316665383761653932326165373737623462656231396135363334356563613635346134393135326630323162653263626539666265386264616236393663646262376530646266396334323139333261346332366238343964333134376162373861626166643061343862313866656238636339386139616464373062663562666635383037333663633561313139323065363434333735316339313131383731643966336363623265305c227d227d")
    );

    private static final EthereumHcdvsService ETHEREUM_HCDVS_SERVICE = new EthereumHcdvsService();

    static {
        byte[] rawAmContractAddr= HexUtil.decodeHex(StrUtil.removePrefix(AM_CONTRACT, "0x"));
        byte[] data = new byte[32 - rawAmContractAddr.length];
        Arrays.fill(data, (byte) 0);
        var amContractAddrBytes32 = ArrayUtil.addAll(data, rawAmContractAddr);

        BTA = BlockchainTrustAnchorFactory.createBTAv1(
                CHAIN_DOMAIN,
                "ethereum2",
                1,
                RAW_PUBLIC_KEY,
                SignAlgoEnum.KECCAK256_WITH_SECP256K1,
                BTA_SUBJECT_IDENTITY.toJson().getBytes(),
                BigInteger.valueOf(55164),
                Numeric.hexStringToByteArray("0x667c35c386746e805ab9b862d0ef9e8b4b4c77f7f58749b9020a958944a45313"),
                amContractAddrBytes32,
                oid,
                "".getBytes()
        );

        PARENT_CS_WHERE_MSG1.setConsensusNodeInfo(BTA.getSubjectIdentity());
        PARENT_CS_WHERE_PERIOD_END.setConsensusNodeInfo(BTA.getSubjectIdentity());

        Method setLoggerMethod = ReflectUtil.getMethod(EthereumHcdvsService.class, "setLogger", Logger.class);
        setLoggerMethod.setAccessible(true);
        try {
            setLoggerMethod.invoke(ETHEREUM_HCDVS_SERVICE, log);
        } catch (IllegalAccessException | InvocationTargetException e) {
            throw new RuntimeException(e);
        }
    }

    @Test
    public void testHcdvsVerifyAnchorConsensusState() {
        var result = ETHEREUM_HCDVS_SERVICE.verifyAnchorConsensusState(BTA, ANCHOR_CS);
        assertNotNull(result);
        assertTrue(result.isSuccess());
    }

    @Test
    public void testHcdvsVerifyConsensusState() {
        var result = ETHEREUM_HCDVS_SERVICE.verifyConsensusState(CS_WHERE_MSG1, PARENT_CS_WHERE_MSG1);
        assertNotNull(result);
        assertTrue(result.isSuccess());
        assertTrue(ObjectUtil.isNotEmpty(CS_WHERE_MSG1.getConsensusNodeInfo()));

        result = ETHEREUM_HCDVS_SERVICE.verifyConsensusState(CS_WHERE_PERIOD_END, PARENT_CS_WHERE_PERIOD_END);
        assertNotNull(result);
        assertTrue(result.isSuccess());
        assertTrue(ObjectUtil.isNotEmpty(CS_WHERE_PERIOD_END.getConsensusNodeInfo()));
    }

    @Test
    public void testHcdvsVerifyCrossChainMessage() {
        CS_WHERE_MSG1.setDomain(new CrossChainDomain(CHAIN_DOMAIN));
        ETHEREUM_HCDVS_SERVICE.verifyConsensusState(CS_WHERE_MSG1, PARENT_CS_WHERE_MSG1);
        var result = ETHEREUM_HCDVS_SERVICE.verifyCrossChainMessage(MSG1, CS_WHERE_MSG1);
        assertNotNull(result);
        assertTrue(result.isSuccess());
    }

    @Test
    public void testHcdvsParseMessageFromLedgerData() {
        var raw = ETHEREUM_HCDVS_SERVICE.parseMessageFromLedgerData(MSG1.getProvableData().getLedgerData());
        assertNotNull(raw);
        var am = AuthMessageFactory.createAuthMessage(raw);
        assertTrue(ObjectUtil.isNotEmpty(am.getPayload()));
    }
}

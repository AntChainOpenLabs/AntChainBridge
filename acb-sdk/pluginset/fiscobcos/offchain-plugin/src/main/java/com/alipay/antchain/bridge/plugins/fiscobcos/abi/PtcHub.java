package com.alipay.antchain.bridge.plugins.fiscobcos.abi;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.v3.client.Client;
import org.fisco.bcos.sdk.v3.codec.abi.FunctionEncoder;
import org.fisco.bcos.sdk.v3.codec.datatypes.Address;
import org.fisco.bcos.sdk.v3.codec.datatypes.Bool;
import org.fisco.bcos.sdk.v3.codec.datatypes.DynamicArray;
import org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes;
import org.fisco.bcos.sdk.v3.codec.datatypes.DynamicStruct;
import org.fisco.bcos.sdk.v3.codec.datatypes.Event;
import org.fisco.bcos.sdk.v3.codec.datatypes.Function;
import org.fisco.bcos.sdk.v3.codec.datatypes.Type;
import org.fisco.bcos.sdk.v3.codec.datatypes.TypeReference;
import org.fisco.bcos.sdk.v3.codec.datatypes.Utf8String;
import org.fisco.bcos.sdk.v3.codec.datatypes.generated.Bytes32;
import org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint8;
import org.fisco.bcos.sdk.v3.codec.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.v3.contract.Contract;
import org.fisco.bcos.sdk.v3.crypto.CryptoSuite;
import org.fisco.bcos.sdk.v3.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.v3.eventsub.EventSubCallback;
import org.fisco.bcos.sdk.v3.model.CryptoType;
import org.fisco.bcos.sdk.v3.model.TransactionReceipt;
import org.fisco.bcos.sdk.v3.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.v3.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class PtcHub extends Contract {
    public static final String[] BINARY_ARRAY = {"60806040523480156200001157600080fd5b50604051620082dc380380620082dc833981016040819052620000349162002097565b6200003f336200005b565b6200004a81620000ab565b620000546200022e565b506200237c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620000c382620002fa60201b6200187f1760201c565b9050600081604001516003811115620000e057620000e06200214f565b14620001335760405162461bcd60e51b815260206004820152601e60248201527f77726f6e67207479706520666f72206263646e7320726f6f742063657274000060448201526064015b60405180910390fd5b6000620001606200014f836200056660201b62001a471760201c565b620006b860201b62001b7a1760201c565b805190602001209050826001604051806040016040528060048152602001631c9bdbdd60e21b81525060405162000198919062002165565b90815260200160405180910390209080519060200190620001bb92919062001e6e565b5060408051808201825260048152631c9bdbdd60e21b602080830191825260008581526002909152929092209051620001f5929062001e6e565b506040518181527f7c787bfbe942686b5f41acec151012ca79c6b81c1c5a23cee512781cf3d5b9bb9060200160405180910390a1505050565b600054600160a81b900460ff16156200029a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b60648201526084016200012a565b60005460ff600160a01b90910481161015620002f8576000805460ff60a01b191660ff60a01b17905560405160ff81527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6200030462001efd565b6200030e62001efd565b60006200032684620007f060201b62001c711760201c565b905060005b8160200151518110156200055d5760008260200151828151811062000354576200035462002183565b60200260200101519050600061ffff16816000015161ffff16141562000392576200038a8162000a1b60201b62001e4c1760201c565b845262000547565b805161ffff1660011415620003c257620003b78162000a1b60201b62001e4c1760201c565b602085015262000547565b805161ffff16600214156200043657620003e78162000a2260201b62001e531760201c565b60ff166003811115620003fe57620003fe6200214f565b846040019060038111156200041757620004176200214f565b908160038111156200042d576200042d6200214f565b90525062000547565b805161ffff16600314156200047057620004656200045f8262000a1b60201b62001e4c1760201c565b62000a46565b606085015262000547565b805161ffff1660041415620004a957620004958162000b6360201b62001e641760201c565b6001600160401b0316608085015262000547565b805161ffff1660051415620004e257620004ce8162000b6360201b62001e641760201c565b6001600160401b031660a085015262000547565b805161ffff16600614156200051257620005078162000a1b60201b62001e4c1760201c565b60c085015262000547565b805161ffff16600714156200054757620005416200053b8262000a1b60201b62001e4c1760201c565b62000b96565b60e08501525b50806200055481620021af565b9150506200032b565b50909392505050565b6200057062001f83565b6000826040015160038111156200058b576200058b6200214f565b1415620005ac5760c0820151620005a29062000d13565b6020015192915050565b600182604001516003811115620005c757620005c76200214f565b1415620005e85760c0820151620005de9062000e20565b6080015192915050565b6002826040015160038111156200060357620006036200214f565b1415620006245760c08201516200061a9062001001565b6060015192915050565b6003826040015160038111156200063f576200063f6200214f565b1415620006605760c08201516200065690620011b2565b6040015192915050565b60405162461bcd60e51b815260206004820152602660248201527f676574436572744f776e65724f69643a20636572742074797065206e6f7420736044820152651d5c1c1bdc9d60d21b60648201526084016200012a565b604080516002808252606082810190935260009190816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081620006d257905050905062000749600062000738856000015160018111156200072757620007276200214f565b620012ef60201b62001e7d1760201c565b6200130660201b62001e911760201c565b816000815181106200075f576200075f62002183565b602002602001018190525062000786600184602001516200138260201b62001efe1760201c565b816001815181106200079c576200079c62002183565b6020026020010181905250620007c96040518060400160405280600061ffff168152602001606081525090565b818160200181905250620007e881620013c560201b62001f411760201c565b949350505050565b604080518082019091526000815260606020820152600682511015620008595760405162461bcd60e51b815260206004820152601760248201527f696c6c6567616c207261772064617461206c656e67746800000000000000000060448201526064016200012a565b60408051808201909152600080825260606020830152906200089c6200088b85846200154460201b620020461760201c565b6200156f60201b6200206e1760201c565b61ffff168152620008af600683620021cd565b91506000825b85518110156200092d57620008f7620008e687620008d5846002620021cd565b6200161760201b6200210f1760201c565b6200164460201b620021391760201c565b62000904906006620021e8565b620009169063ffffffff1682620021cd565b9050816200092481620021af565b925050620008b5565b6000826001600160401b038111156200094a576200094a6200204e565b6040519080825280602002602001820160405280156200099957816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081620009695790505b509050600092505b865185101562000a0c5760408051606080820183526000808352602083015291810191909152620009d388876200174b565b96509050808285620009e581620021af565b965081518110620009fa57620009fa62002183565b602002602001018190525050620009a1565b60208401525090949350505050565b6040015190565b600062000a4060018360400151620018d560201b620022331760201c565b92915050565b62000a5062001f83565b62000a5a62001f83565b600062000a7284620007f060201b62001c711760201c565b905060005b8160200151518110156200055d5760008260200151828151811062000aa05762000aa062002183565b60200260200101519050600061ffff16816000015161ffff16141562000b225762000ad68162000a2260201b62001e531760201c565b60ff16600181111562000aed5762000aed6200214f565b8490600181111562000b035762000b036200214f565b9081600181111562000b195762000b196200214f565b90525062000b4d565b805161ffff166001141562000b4d5762000b478162000a1b60201b62001e4c1760201c565b60208501525b508062000b5a81620021af565b91505062000a77565b600062000a4062000b8560088460400151620018d560201b620022331760201c565b620018da60201b620022381760201c565b62000bc26040518060800160405280606081526020016060815260200160608152602001606081525090565b62000bee6040518060800160405280606081526020016060815260200160608152602001606081525090565b600062000c0684620007f060201b62001c711760201c565b905060005b8160200151518110156200055d5760008260200151828151811062000c345762000c3462002183565b60200260200101519050600061ffff16816000015161ffff16141562000c725762000c6a8162000a1b60201b62001e4c1760201c565b845262000cfd565b805161ffff166001141562000ca25762000c978162000a1b60201b62001e4c1760201c565b602085015262000cfd565b805161ffff166002141562000cd25762000cc78162000a1b60201b62001e4c1760201c565b604085015262000cfd565b805161ffff166003141562000cfd5762000cf78162000a1b60201b62001e4c1760201c565b60608501525b508062000d0a81620021af565b91505062000c0b565b62000d1d62001f9e565b62000d2762001f9e565b600062000d3f84620007f060201b62001c711760201c565b905060005b8160200151518110156200055d5760008260200151828151811062000d6d5762000d6d62002183565b60200260200101519050600061ffff16816000015161ffff16141562000dab5762000da38162000a1b60201b62001e4c1760201c565b845262000e0a565b805161ffff166001141562000ddf5762000dd46200045f8262000a1b60201b62001e4c1760201c565b602085015262000e0a565b805161ffff166002141562000e0a5762000e048162000a1b60201b62001e4c1760201c565b60408501525b508062000e1781620021af565b91505062000d44565b62000e2a62001fba565b62000e3462001fba565b600062000e4c84620007f060201b62001c711760201c565b905060005b8160200151518110156200055d5760008260200151828151811062000e7a5762000e7a62002183565b60200260200101519050600061ffff16816000015161ffff16141562000eb85762000eb08162000a1b60201b62001e4c1760201c565b845262000feb565b805161ffff166001141562000f2c5762000edd8162000a2260201b62001e531760201c565b60ff16600181111562000ef45762000ef46200214f565b8460200190600181111562000f0d5762000f0d6200214f565b9081600181111562000f235762000f236200214f565b90525062000feb565b805161ffff166002141562000f5c5762000f518162000a1b60201b62001e4c1760201c565b604085015262000feb565b805161ffff166003141562000f8c5762000f818162000a1b60201b62001e4c1760201c565b606085015262000feb565b805161ffff166004141562000fc05762000fb56200045f8262000a1b60201b62001e4c1760201c565b608085015262000feb565b805161ffff166005141562000feb5762000fe58162000a1b60201b62001e4c1760201c565b60a08501525b508062000ff881620021af565b91505062000e51","","","","","","","","15615c855760018114615c9657615cc3565b60ff19861689528489019650615cc3565b60008a81526020902060005b86811015615cbb5781548b820152908501908301615ca2565b505084890196505b509498975050505050505050565b600181815b80851115615d0c578160001904821115615cf257615cf2615b38565b80851615615cff57918102915b93841c9390800290615cd6565b509250929050565b600082615d23575060016107c2565b81615d30575060006107c2565b8160018114615d465760028114615d5057615d6c565b60019150506107c2565b60ff841115615d6157615d61615b38565b50506001821b6107c2565b5060208310610133831016604e8410600b8410161715615d8f575081810a6107c2565b615d998383615cd1565b8060001904821115615dad57615dad615b38565b029392505050565b6000612ca68383615d14565b600060ff821660ff84168060ff03821115615dde57615dde615b38565b019392505050565b600060ff821660ff841680821015615e0057615e00615b38565b90039392505050565b828152604060208201526000611c69604083018461553f565b600060208284031215615e3457600080fd5b505191905056fe63726f7373636861696e20636572742076616c69646174696f6e3a2074797065206f66207369676e65722063657274206d757374206265206263646e7363726f7373636861696e20636572742076616c69646174696f6e3a20696e76616c69642073696763726f7373636861696e20636572742076616c69646174696f6e3a2072657175697265206263646e7320726f6f74206f7220646f6d61696e207370616365206f776e65722063657274206173207369676e657263726f7373636861696e20636572742076616c69646174696f6e3a2077726f6e67207369676e6572a26469706673582212208a6c28e5c12a7adb367d404741fdfb723e36edb04272828c357338800c939fcc64736f6c634300080b0033"};

    public static final String BINARY = org.fisco.bcos.sdk.v3.utils.StringUtils.joinAll("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","","","","1c7481611f4d565b949350505050565b604080518082019091526000815260606020820152600682511015611ce457604051636381e58960e11b815260206004820152601760248201527f696c6c6567616c207261772064617461206c656e6774680000000000000000006044820152606401610427565b6040805180820190915260008082526060602083015290611d0d611d088584612052565b61207a565b61ffff168152611d1e600683615bf5565b91506000825b8551811015611d7857611d49611d4487611d3f846002615bf5565b61211b565b612145565b611d54906006615c0d565b611d649063ffffffff1682615bf5565b905081611d7081615bda565b925050611d24565b6000826001600160401b03811115611d9257611d9261564c565b604051908082528060200260200182016040528015611ddf57816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081611db05790505b509050600092505b8651851015611e495760408051606080820183526000808352602083015291810191909152611e168887613bd4565b96509050808285611e2681615bda565b965081518110611e3857611e38615b81565b602002602001018190525050611de7565b60208401525090949350505050565b6040015190565b60006103b760018360400151015190565b60006103b7611e8460088460400151015190565b612244565b60008160018111156103b7576103b761571f565b60408051606080820183526000808352602083015291810191909152604080516001808252818301909252600091602082018180368337019050509050611ee660018483612402565b6040805160608101825261ffff959095168552600160208601528401525090919050565b60408051606080820183526000808352602083015291810191909152506040805160608101825261ffff939093168352815163ffffffff16602084015282015290565b60606000611f5a83612413565b90506000611f69826006615c0d565b63ffffffff166001600160401b03811115611f8657611f8661564c565b6040519080825280601f01601f191660200182016040528015611fb0576020820181803683370190505b509050611fcb6002611fc5866000015161207a565b83612487565b611fdf6006611fd984612145565b83612498565b600660005b6020860151518110156120485760006120198760200151838151811061200c5761200c615b81565b60200260200101516124b1565b9050612026838286612540565b80516120329084615bf5565b925050808061204090615bda565b915050611fe4565b5090949350505050565b8151600090612062836002615bf5565b111561206d57600080fd5b50016002015161ffff1690565b60408051600280825281830190925260009160f084901b9183916020820181803683370190505090508160011a60f81b816000815181106120bd576120bd615b81565b60200101906001600160f81b031916908160001a9053508160001a60f81b816001815181106120ee576120ee615b81565b60200101906001600160f81b031916908160001a9053506000612112826000612052565b95945050505050565b815160009061212b836004615bf5565b111561213657600080fd5b50016004015163ffffffff1690565b60408051600480825281830190925260009160e084901b9183916020820181803683370190505090508160031a60f81b8160008151811061218857612188615b81565b60200101906001600160f81b031916908160001a9053508160021a60f81b816001815181106121b9576121b9615b81565b60200101906001600160f81b031916908160001a9053508160011a60f81b816002815181106121ea576121ea615b81565b60200101906001600160f81b031916908160001a9053508160001a60f81b8160038151811061221b5761221b615b81565b60200101906001600160f81b031916908160001a905350600061211282600061211b565b015190565b60408051600880825281830190925260009160c084901b9183916020820181803683370190505090508160071a60f81b8160008151811061228757612287615b81565b60200101906001600160f81b031916908160001a9053508160061a60f81b816001815181106122b8576122b8615b81565b60200101906001600160f81b031916908160001a9053508160051a60f81b816002815181106122e9576122e9615b81565b60200101906001600160f81b031916908160001a9053508160041a60f81b8160038151811061231a5761231a615b81565b60200101906001600160f81b031916908160001a9053508160031a60f81b8160048151811061234b5761234b615b81565b60200101906001600160f81b031916908160001a9053508160021a60f81b8160058151811061237c5761237c615b81565b60200101906001600160f81b031916908160001a9053508160011a60f81b816006815181106123ad576123ad615b81565b60200101906001600160f81b031916908160001a9053508160001a60f81b816007815181106123de576123de615b81565b60200101906001600160f81b031916908160001a9053506000612112826000613d31565b909101600019810180519290915252565b600080805b6020840151518110156124805760008460200151828151811061243d5761243d615b81565b6020026020010151905080604001515183600661245a9190615c0d565b63ffffffff1661246a9190615bf5565b925050808061247890615bda565b915050612418565b5092915050565b909101600119810180519290915252565b909101600319810180519290915252565b602001515190565b60606000826020015160066124c69190615c0d565b63ffffffff166001600160401b038111156124e3576124e361564c565b6040519080825280601f01601f19166020018201604052801561250d576020820181803683370190505b5090506125226002611fc5856000015161207a565b6125346006611fd98560200151612145565b6103b760068460400151835b8151815161255463ffffffff831686615bf5565b11156125d457604051636381e58960e11b815260206004820152604260248201527f7661724279746573546f4279746573426967456e6469616e3a206f666673657460448201527f2069732067726561746572207468616e20746865206f7574707574206c656e676064820152610e8d60f31b608482015260a401610427565b801580156125e157610913565b8483018051601f84168015602002818801018581018215602002838601015b81831015612618578251815260209283019201612600565b5050509152505050505050565b82516060906126348385615bf5565b111561263f57600080fd5b6000826001600160401b038111156126595761265961564c565b6040519080825280601f01601f191660200182016040528015612683576020820181803683370190505b5090506020808201908686010161269b828287613d5e565b509095945050505050565b6000546001600160a01b0316331461176957604051636381e58960e11b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610427565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f5c7c30d4a0f08950cb23be4132957b357fa5dfdb0fcf218f81b86a1c036e47d09190a35050565b600061275c82611889565b90506000816040015160038111156127765761277661571f565b146127c457604051636381e58960e11b815260206004820152601e60248201527f77726f6e67207479706520666f72206263646e7320726f6f74206365727400006044820152606401610427565b60006127d76127d283611a51565b611b85565b805190602001209050826001604051806040016040528060048152602001631c9bdbdd60e21b81525060405161280d9190615c35565b9081526020016040518091039020908051906020019061282e9291906151d8565b5060408051808201825260048152631c9bdbdd60e21b60208083019182526000858152600290915292909220905161286692906151d8565b506040518181527f93e430b5dea7948b047f2309fc9ab945d4eea0d469ad3c8f561fdb6b88ff2a1e9060200160405180910390a1505050565b6128a76152ea565b6128af6152ea565b60006128ba84611c7c565b905060005b816020015151811015611a48576000826020015182815181106128e4576128e4615b81565b60200260200101519050600061ffff16816000015161ffff16141561290f57604081015184526129cd565b805161ffff166001141561293a5761293061292b826040015190565b611889565b60208501526129cd565b805161ffff166002141561295757604081015160408501526129cd565b805161ffff1660031415612997576040805180820182526000808252606060209283015282518084018452908152918301519082015260608501526129cd565b805161ffff16600414156129b457604081015160808501526129cd565b805161ffff16600514156129cd57604081015160a08501525b50806129d881615bda565b9150506128bf565b60006129f3826020015160600151611b85565b80516020918201206000818152600290925260408220805491935090612a1890615816565b905011612a5b57604051636381e58960e11b815260206004820152601060248201526f1a5cdcdd595c881b9bdd08199bdd5b9960821b6044820152606401610427565b6000818152600260205260408082209051612b1991600191612a7d9190615c51565b90815260200160405180910390208054612a9690615816565b80601f0160208091040260200160405190810160405280929190818152602001828054612ac290615816565b8015612b0f5780601f10612ae457610100808354040283529160200191612b0f565b820191906000526020600020905b815481529060010190602001808311612af257829003601f168201915b5050505050611889565b9050612b64604051806040016040528060168152602001754b656363616b32353657697468536563703235366b3160501b8152508260e0015160400151613dd990919063ffffffff16565b15612bac57600080612b83838660200151613def90919063ffffffff16565b91509150818190612ba857604051636381e58960e11b8152600401610427919061560f565b5050505b612bb583613f83565b612c0257604051636381e58960e11b815260206004820152601a60248201527f70746320747275737420726f6f742073696720696e76616c69640000000000006044820152606401610427565b505050565b6000612c196127d28360200151611a51565b805190602001209050919050565b60006103b7612c3583612c3a565b613230565b6060816020015151826000015110612ca957604051636381e58960e11b815260206004820152602b60248201527f544c5649","","","50614c7f6003612e568560600151611b85565b81600381518110614c9257614c92615b81565b6020026020010181905250614cac60048460800151614aa8565b81600481518110614cbf57614cbf615b81565b6020026020010181905250614cd960058460a00151614aa8565b81600581518110614cec57614cec615b81565b6020026020010181905250614d0660068460c00151611f0a565b81600681518110614d1957614d19615b81565b6020026020010181905250614d366007612e568560e00151614f9a565b81600781518110611c3857611c38615b81565b6060600083516001811115614d6057614d6061571f565b14614dbc57604051636381e58960e11b815260206004820152602560248201527f6f6e6c7920737570706f727420583530395f5055424c49435f4b45595f494e466044820152644f206e6f7760d81b6064820152608401610427565b60408360200151511015614e1357604051636381e58960e11b815260206004820152601c60248201527f7075626c6963206b6579206c656e677468206e6f7420656e6f757468000000006044820152606401610427565b60208301518051600090614e2990604090615bad565b60408051818152606081018252919250600091906020820181803683370190505092909101602081810151908401526040908101519083015250905092915050565b600080825160411415614ea25760208301516040840151606085015160001a614e9687828585615090565b94509450505050613d2a565b50600090506002613d2a565b6000806000856001600160a01b031663973e417a60e01b8686604051602401614ed8929190615e25565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051614f169190615c35565b600060405180830381855afa9150503d8060008114614f51576040519150601f19603f3d011682016040523d82523d6000602084013e614f56565b606091505b5091509150818015614f6a57506020815110155b8015614b7f57508051634b9f20bd60e11b90614f8f9083016020908101908401615e3e565b149695505050505050565b60408051600480825260a0820190925260609160009190816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081614fb6579050509050614ff660008460000151611f0a565b8160008151811061500957615009615b81565b602002602001018190525061502360018460200151611f0a565b8160018151811061503657615036615b81565b602002602001018190525061505060028460400151611f0a565b8160028151811061506357615063615b81565b602002602001018190525061507d60038460600151611f0a565b81600381518110611c3857611c38615b81565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156150c7575060009050600361514b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561511b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166151445760006001925092505061514b565b9150600090505b94509492505050565b82805461516090615816565b90600052602060002090601f01602090048101928261518257600085556151c8565b82601f1061519b5782800160ff198235161785556151c8565b828001600101855582156151c8579182015b828111156151c85782358255916020019190600101906151ad565b506151d4929150615494565b5090565b8280546151e490615816565b90600052602060002090601f01602090048101928261520657600085556151c8565b82601f1061521f57805160ff19168380011785556151c8565b828001600101855582156151c8579182015b828111156151c8578251825591602001919060010190615231565b604080516101008101825260608082526020820152908101600081526020016152736152cf565b815260200160006001600160401b0316815260200160006001600160401b03168152602001606081526020016152ca6040518060800160405280606081526020016060815260200160608152602001606081525090565b905290565b604080518082019091528060005b8152602001606081525090565b6040518060c001604052806060815260200161530461524c565b81526020016060815260200161532d604051806040016040528060008152602001606081525090565b815260200160608152602001606081525090565b6040805160a08101909152606060808201908152815260208101615363615465565b815260006020820152606060409091015290565b604080516101208101825260008082526020820152606091810182905290810161539f6153d4565b81526020016153ac615465565b8152602001600063ffffffff1681526020016060815260200160608152602001606081525090565b6040805160a08101825260608082526020820152908101600081526020016152dd6152cf565b6040518060600160405280606081526020016152dd6152cf565b6040805160c0810190915260608152602081016000815260200160608152602001606081526020016152dd6152cf565b604051806080016040528060608152602001606081526020016152dd6152cf565b6040805160a0810182526060808201818152608083019190915281526000602082018190529181019190915290565b5b808211156151d45760008155600101615495565b60008083601f8401126154bb57600080fd5b5081356001600160401b038111156154d257600080fd5b602083019150836020828501011115613d2a57600080fd5b600080602083850312156154fd57600080fd5b82356001600160401b0381111561551357600080fd5b61551f858286016154a9565b90969095509350505050565b60006020828403121561553d57600080fd5b81356001600160a01b038116811461312e57600080fd5b60008060006040848603121561556957600080fd5b83356001600160401b0381111561557f57600080fd5b61558b868287016154a9565b909450925050602084013563ffffffff811681146155a857600080fd5b809150509250925092565b60005b838110156155ce5781810151838201526020016155b6565b838111156155dd576000848401525b50505050565b600081518084526155fb8160208601602086016155b3565b601f01601f19169290920160200192915050565b60208152600061312e60208301846155e3565b6003811061043957600080fd5b60006020828403121561564157600080fd5b813561312e81615622565b63b95aa35560e01b600052604160045260246000fd5b60006001600160401b038084111561567c5761567c61564c565b604051601f8501601f19908116603f011681019082821181831017156156a4576156a461564c565b816040528093508581528686860111156156bd57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156156e957600080fd5b81356001600160401b038111156156ff57600080fd5b8201601f8101841361571057600080fd5b611c7484823560208401615662565b63b95aa35560e01b600052602160045260246000fd5b600381106157455761574561571f565b9052565b6020808252825182820181905260009190848201906040850190845b8181101561578857615778838551615735565b9284019291840191600101615765565b50909695505050505050565b6000602082840312156157a657600080fd5b5035919050565b6000806000604084860312156157c257600080fd5b83356001600160401b038111156157d857600080fd5b6157e4868287016154a9565b909790965060209590950135949350505050565b602081016103b78284615735565b8183823760009101908152919050565b600181811c9082168061582a57607f821691505b6020821081141561584b5763b95aa35560e01b600052602260045260246000fd5b50919050565b60006020828403121561586357600080fd5b815161312e81615622565b6040810161587c8285615735565b6001600160a01b039290921660209190910152919050565b6000815160a084526158a960a08501826155e3565b9050602083015184820360208601526158c282826155e3565b91505060408301516158d76040860182615735565b50606083015184820360608601528051600281106158f7576158f761571f565b80835250602081015190506040602083015261591660408301826155e3565b9150506080830151848203608086015261211282826155e3565b600081516060845280516040606086015261594e60a08601826155e3565b905060208201519150605f1985820301608086015261596d81836155e3565b91505060208301516020850152604083015160408501528091505092915050565b805163ffffffff168252600061012060208301516159b4602086018263ffffffff169052565b5060408301518160408601526159cc828601826155e3565b915050606083015184820360608601526159e68282615894565b91505060808301518482036080860152615a008282615930565b91505060a0830151615a1a60a086018263ffffffff169052565b5060c083015184820360c0860152615a3282826155e3565b91505060e083015184820360e0860152615a4c82826155e3565b9150506101008084015185830382870152614b7f83826155e3565b604081526000615a7a604083018561598e565b82810360208401528351608082528051905060206080830152615aa060a08301826155e3565b905060208501518282036020840152615ab98282615930565b91505063ffffffff604086015116604083015260608501518282036060840152615ae382826155e3565b979650505050505050565b600060208284031215615b0057600080fd5b8151801515811461312e57600080fd5b604081526000615b236040830185615930565b905082151560208301529392505050565b6040815260008351604080840152615b4f60808401826155e3565b90506020850151603f19848303016060850152615b6c82826155e3565b9150508281036020840152612112818561598e565b63b95aa35560e01b600052603260045260246000fd5b63b95aa35560e01b600052601160045260246000fd5b600082821015615bbf57615bbf615b97565b500390565b63b95aa35560e01b600052603160045260246000fd5b6000600019821415615bee57615bee615b97565b5060010190565b60008219821115615c0857615c08615b97565b500190565b600063ffffffff808316818516808303821115615c2c57615c2c615b97565b01949350505050565b60008251615c478184602087016155b3565b9190910192915050565b600080835481600182811c915080831680615c6d57607f83169250","5b6020808410821415615c8d5763b95aa35560e01b86526022600452602486fd5b818015615ca15760018114615cb257615cdf565b60ff19861689528489019650615cdf565b60008a81526020902060005b86811015615cd75781548b820152908501908301615cbe565b505084890196505b509498975050505050505050565b600181815b80851115615d28578160001904821115615d0e57615d0e615b97565b80851615615d1b57918102915b93841c9390800290615cf2565b509250929050565b600082615d3f575060016103b7565b81615d4c575060006103b7565b8160018114615d625760028114615d6c57615d88565b60019150506103b7565b60ff841115615d7d57615d7d615b97565b50506001821b6103b7565b5060208310610133831016604e8410600b8410161715615dab575081810a6103b7565b615db58383615ced565b8060001904821115615dc957615dc9615b97565b029392505050565b600061312e8383615d30565b600060ff821660ff84168060ff03821115615dfa57615dfa615b97565b019392505050565b600060ff821660ff841680821015615e1c57615e1c615b97565b90039392505050565b828152604060208201526000611c7460408301846155e3565b600060208284031215615e5057600080fd5b505191905056fe63726f7373636861696e20636572742076616c69646174696f6e3a2072657175697265206263646e7320726f6f74206f7220646f6d61696e207370616365206f776e65722063657274206173207369676e657263726f7373636861696e20636572742076616c69646174696f6e3a2077726f6e67207369676e657263726f7373636861696e20636572742076616c69646174696f6e3a20696e76616c69642073696763726f7373636861696e20636572742076616c69646174696f6e3a2074797065206f66207369676e65722063657274206d757374206265206263646e73a2646970667358221220e72b5fad5218fd943fcee666738ea6f2472f5df364b1582d2dafea28feb5a11a64736f6c634300080b0033"};

    public static final String SM_BINARY = org.fisco.bcos.sdk.v3.utils.StringUtils.joinAll("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rawRootBcdnsCert\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum PTCTypeEnum\",\"name\":\"ptcType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"}],\"name\":\"AddPtcVerifier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"laneHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"LatestTpBta\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ownerOid\",\"type\":\"bytes32\"}],\"name\":\"NewBcdnsCert\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ptcOwnerOid\",\"type\":\"bytes32\"}],\"name\":\"NewPtrTrustRoot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ptcOwnerOid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVersionNum\",\"type\":\"uint256\"}],\"name\":\"NewVerifyAnchor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum PTCTypeEnum\",\"name\":\"ptcType\",\"type\":\"uint8\"}],\"name\":\"RemovePtcVerifier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"laneHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"SaveTpBta\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"senderDomain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"receiverDomain\",\"type\":\"string\"}],\"internalType\":\"struct CrossChainChannel\",\"name\":\"channel\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"senderId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"receiverId\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct CrossChainLane\",\"name\":\"tpbtaLane\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"VerifyProof\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierContract\",\"type\":\"address\"}],\"name\":\"addPtcVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rawTpBta\",\"type\":\"bytes\"}],\"name\":\"addTpBta\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"bcdnsCertMap\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"tpbtaLane\",\"type\":\"bytes\"}],\"name\":\"getLatestTpBta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ptcOwnerOid\",\"type\":\"bytes\"}],\"name\":\"getPTCTrustRoot\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ptcOwnerOid\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"versionNum\",\"type\":\"uint256\"}],\"name\":\"getPTCVerifyAnchor\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedPTCType\",\"outputs\":[{\"internalType\":\"enum PTCTypeEnum[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"tpbtaLane\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"tpBtaVersion\",\"type\":\"uint32\"}],\"name\":\"getTpBta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ptcOwnerOid\",\"type\":\"bytes\"}],\"name\":\"hasPTCTrustRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ptcOwnerOid\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"versionNum\",\"type\":\"uint256\"}],\"name\":\"hasPTCVerifyAnchor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"tpbtaLane\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"tpBtaVersion\",\"type\":\"uint32\"}],\"name\":\"hasTpBta\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rawRootBcdnsCert\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"ownerOidToBcdnsDomainSpaceMap\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"ptcTrustRootMap\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"rawPtcTrustRoot\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ptcTypeSupported\",\"outputs\":[{\"internalType\":\"enum PTCTypeEnum\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PTCTypeEnum\",\"name\":\"ptcType\",\"type\":\"uint8\"}],\"name\":\"removePtcVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tpBtaMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"latestVersion\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rawPtcTrustRoot\",\"type\":\"bytes\"}],\"name\":\"updatePTCTrustRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PTCTypeEnum\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"verifierMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rawTpProof\",\"type\":\"bytes\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"};

    public static final String ABI = org.fisco.bcos.sdk.v3.utils.StringUtils.joinAll("", ABI_ARRAY);

    public static final String FUNC_ADDPTCVERIFIER = "addPtcVerifier";

    public static final String FUNC_ADDTPBTA = "addTpBta";

    public static final String FUNC_BCDNSCERTMAP = "bcdnsCertMap";

    public static final String FUNC_GETLATESTTPBTA = "getLatestTpBta";

    public static final String FUNC_GETPTCTRUSTROOT = "getPTCTrustRoot";

    public static final String FUNC_GETPTCVERIFYANCHOR = "getPTCVerifyAnchor";

    public static final String FUNC_GETSUPPORTEDPTCTYPE = "getSupportedPTCType";

    public static final String FUNC_GETTPBTA = "getTpBta";

    public static final String FUNC_HASPTCTRUSTROOT = "hasPTCTrustRoot";

    public static final String FUNC_HASPTCVERIFYANCHOR = "hasPTCVerifyAnchor";

    public static final String FUNC_HASTPBTA = "hasTpBta";

    public static final String FUNC_INIT = "init";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_OWNEROIDTOBCDNSDOMAINSPACEMAP = "ownerOidToBcdnsDomainSpaceMap";

    public static final String FUNC_PTCTRUSTROOTMAP = "ptcTrustRootMap";

    public static final String FUNC_PTCTYPESUPPORTED = "ptcTypeSupported";

    public static final String FUNC_REMOVEPTCVERIFIER = "removePtcVerifier";

    public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";

    public static final String FUNC_TPBTAMAP = "tpBtaMap";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final String FUNC_UPDATEPTCTRUSTROOT = "updatePTCTrustRoot";

    public static final String FUNC_VERIFIERMAP = "verifierMap";

    public static final String FUNC_VERIFYPROOF = "verifyProof";

    public static final Event ADDPTCVERIFIER_EVENT = new Event("AddPtcVerifier", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event INITIALIZED_EVENT = new Event("Initialized", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
    ;

    public static final Event LATESTTPBTA_EVENT = new Event("LatestTpBta", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event NEWBCDNSCERT_EVENT = new Event("NewBcdnsCert", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event NEWPTRTRUSTROOT_EVENT = new Event("NewPtrTrustRoot", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    ;

    public static final Event NEWVERIFYANCHOR_EVENT = new Event("NewVerifyAnchor", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event REMOVEPTCVERIFIER_EVENT = new Event("RemovePtcVerifier", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
    ;

    public static final Event SAVETPBTA_EVENT = new Event("SaveTpBta", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event VERIFYPROOF_EVENT = new Event("VerifyProof", 
            Arrays.<TypeReference<?>>asList(new TypeReference<CrossChainLane>() {}, new TypeReference<Bool>() {}));
    ;

    protected PtcHub(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public static String getABI() {
        return ABI;
    }

    public List<AddPtcVerifierEventResponse> getAddPtcVerifierEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ADDPTCVERIFIER_EVENT, transactionReceipt);
        ArrayList<AddPtcVerifierEventResponse> responses = new ArrayList<AddPtcVerifierEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AddPtcVerifierEventResponse typedResponse = new AddPtcVerifierEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ptcType = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.verifierAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeAddPtcVerifierEvent(BigInteger fromBlock, BigInteger toBlock,
            List<String> otherTopics, EventSubCallback callback) {
        String topic0 = eventEncoder.encode(ADDPTCVERIFIER_EVENT);
        subscribeEvent(topic0,otherTopics,fromBlock,toBlock,callback);
    }

    public void subscribeAddPtcVerifierEvent(EventSubCallback callback) {
        String topic0 = eventEncoder.encode(ADDPTCVERIFIER_EVENT);
        subscribeEvent(topic0,callback);
    }

    public List<InitializedEventResponse> getInitializedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(INITIALIZED_EVENT, transactionReceipt);
        ArrayList<InitializedEventResponse> responses = new ArrayList<InitializedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            InitializedEventResponse typedResponse = new InitializedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.version = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInitializedEvent(BigInteger fromBlock, BigInteger toBlock,
            List<String> otherTopics, EventSubCallback callback) {
        String topic0 = eventEncoder.encode(INITIALIZED_EVENT);
        subscribeEvent(topic0,otherTopics,fromBlock,toBlock,callback);
    }

    public void subscribeInitializedEvent(EventSubCallback callback) {
        String topic0 = eventEncoder.encode(INITIALIZED_EVENT);
        subscribeEvent(topic0,callback);
    }

    public List<LatestTpBtaEventResponse> getLatestTpBtaEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(LATESTTPBTA_EVENT, transactionReceipt);
        ArrayList<LatestTpBtaEventResponse> responses = new ArrayList<LatestTpBtaEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            LatestTpBtaEventResponse typedResponse = new LatestTpBtaEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.laneHash = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.version = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeLatestTpBtaEvent(BigInteger fromBlock, BigInteger toBlock,
            List<String> otherTopics, EventSubCallback callback) {
        String topic0 = eventEncoder.encode(LATESTTPBTA_EVENT);
        subscribeEvent(topic0,otherTopics,fromBlock,toBlock,callback);
    }

    public void subscribeLatestTpBtaEvent(EventSubCallback callback) {
        String topic0 = eventEncoder.encode(LATESTTPBTA_EVENT);
        subscribeEvent(topic0,callback);
    }

    public List<NewBcdnsCertEventResponse> getNewBcdnsCertEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(NEWBCDNSCERT_EVENT, transactionReceipt);
        ArrayList<NewBcdnsCertEventResponse> responses = new ArrayList<NewBcdnsCertEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            NewBcdnsCertEventResponse typedResponse = new NewBcdnsCertEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ownerOid = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeNewBcdnsCertEvent(BigInteger fromBlock, BigInteger toBlock,
            List<String> otherTopics, EventSubCallback callback) {
        String topic0 = eventEncoder.encode(NEWBCDNSCERT_EVENT);
        subscribeEvent(topic0,otherTopics,fromBlock,toBlock,callback);
    }

    public void subscribeNewBcdnsCertEvent(EventSubCallback callback) {
        String topic0 = eventEncoder.encode(NEWBCDNSCERT_EVENT);
        subscribeEvent(topic0,callback);
    }

    public List<NewPtrTrustRootEventResponse> getNewPtrTrustRootEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(NEWPTRTRUSTROOT_EVENT, transactionReceipt);
        ArrayList<NewPtrTrustRootEventResponse> responses = new ArrayList<NewPtrTrustRootEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            NewPtrTrustRootEventResponse typedResponse = new NewPtrTrustRootEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ptcOwnerOid = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeNewPtrTrustRootEvent(BigInteger fromBlock, BigInteger toBlock,
            List<String> otherTopics, EventSubCallback callback) {
        String topic0 = eventEncoder.encode(NEWPTRTRUSTROOT_EVENT);
        subscribeEvent(topic0,otherTopics,fromBlock,toBlock,callback);
    }

    public void subscribeNewPtrTrustRootEvent(EventSubCallback callback) {
        String topic0 = eventEncoder.encode(NEWPTRTRUSTROOT_EVENT);
        subscribeEvent(topic0,callback);
    }

    public List<NewVerifyAnchorEventResponse> getNewVerifyAnchorEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(NEWVERIFYANCHOR_EVENT, transactionReceipt);
        ArrayList<NewVerifyAnchorEventResponse> responses = new ArrayList<NewVerifyAnchorEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            NewVerifyAnchorEventResponse typedResponse = new NewVerifyAnchorEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ptcOwnerOid = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.newVersionNum = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeNewVerifyAnchorEvent(BigInteger fromBlock, BigInteger toBlock,
            List<String> otherTopics, EventSubCallback callback) {
        String topic0 = eventEncoder.encode(NEWVERIFYANCHOR_EVENT);
        subscribeEvent(topic0,otherTopics,fromBlock,toBlock,callback);
    }

    public void subscribeNewVerifyAnchorEvent(EventSubCallback callback) {
        String topic0 = eventEncoder.encode(NEWVERIFYANCHOR_EVENT);
        subscribeEvent(topic0,callback);
    }

    public List<OwnershipTransferredEventResponse> getOwnershipTransferredEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
        ArrayList<OwnershipTransferredEventResponse> responses = new ArrayList<OwnershipTransferredEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeOwnershipTransferredEvent(BigInteger fromBlock, BigInteger toBlock,
            List<String> otherTopics, EventSubCallback callback) {
        String topic0 = eventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT);
        subscribeEvent(topic0,otherTopics,fromBlock,toBlock,callback);
    }

    public void subscribeOwnershipTransferredEvent(EventSubCallback callback) {
        String topic0 = eventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT);
        subscribeEvent(topic0,callback);
    }

    public List<RemovePtcVerifierEventResponse> getRemovePtcVerifierEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(REMOVEPTCVERIFIER_EVENT, transactionReceipt);
        ArrayList<RemovePtcVerifierEventResponse> responses = new ArrayList<RemovePtcVerifierEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RemovePtcVerifierEventResponse typedResponse = new RemovePtcVerifierEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ptcType = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeRemovePtcVerifierEvent(BigInteger fromBlock, BigInteger toBlock,
            List<String> otherTopics, EventSubCallback callback) {
        String topic0 = eventEncoder.encode(REMOVEPTCVERIFIER_EVENT);
        subscribeEvent(topic0,otherTopics,fromBlock,toBlock,callback);
    }

    public void subscribeRemovePtcVerifierEvent(EventSubCallback callback) {
        String topic0 = eventEncoder.encode(REMOVEPTCVERIFIER_EVENT);
        subscribeEvent(topic0,callback);
    }

    public List<SaveTpBtaEventResponse> getSaveTpBtaEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SAVETPBTA_EVENT, transactionReceipt);
        ArrayList<SaveTpBtaEventResponse> responses = new ArrayList<SaveTpBtaEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SaveTpBtaEventResponse typedResponse = new SaveTpBtaEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.laneHash = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.version = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeSaveTpBtaEvent(BigInteger fromBlock, BigInteger toBlock,
            List<String> otherTopics, EventSubCallback callback) {
        String topic0 = eventEncoder.encode(SAVETPBTA_EVENT);
        subscribeEvent(topic0,otherTopics,fromBlock,toBlock,callback);
    }

    public void subscribeSaveTpBtaEvent(EventSubCallback callback) {
        String topic0 = eventEncoder.encode(SAVETPBTA_EVENT);
        subscribeEvent(topic0,callback);
    }

    public List<VerifyProofEventResponse> getVerifyProofEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(VERIFYPROOF_EVENT, transactionReceipt);
        ArrayList<VerifyProofEventResponse> responses = new ArrayList<VerifyProofEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VerifyProofEventResponse typedResponse = new VerifyProofEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.tpbtaLane = (CrossChainLane) eventValues.getNonIndexedValues().get(0);
            typedResponse.result = (Boolean) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeVerifyProofEvent(BigInteger fromBlock, BigInteger toBlock,
            List<String> otherTopics, EventSubCallback callback) {
        String topic0 = eventEncoder.encode(VERIFYPROOF_EVENT);
        subscribeEvent(topic0,otherTopics,fromBlock,toBlock,callback);
    }

    public void subscribeVerifyProofEvent(EventSubCallback callback) {
        String topic0 = eventEncoder.encode(VERIFYPROOF_EVENT);
        subscribeEvent(topic0,callback);
    }

    public TransactionReceipt addPtcVerifier(String verifierContract) {
        final Function function = new Function(
                FUNC_ADDPTCVERIFIER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.Address(verifierContract)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return executeTransaction(function);
    }

    public Function getMethodAddPtcVerifierRawFunction(String verifierContract) throws
            ContractException {
        final Function function = new Function(FUNC_ADDPTCVERIFIER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.Address(verifierContract)), 
                Arrays.<TypeReference<?>>asList());
        return function;
    }

    public String getSignedTransactionForAddPtcVerifier(String verifierContract) {
        final Function function = new Function(
                FUNC_ADDPTCVERIFIER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.Address(verifierContract)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return createSignedTransaction(function);
    }

    public String addPtcVerifier(String verifierContract, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDPTCVERIFIER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.Address(verifierContract)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return asyncExecuteTransaction(function, callback);
    }

    public Tuple1<String> getAddPtcVerifierInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDPTCVERIFIER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = this.functionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt addTpBta(byte[] rawTpBta) {
        final Function function = new Function(
                FUNC_ADDTPBTA, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawTpBta)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return executeTransaction(function);
    }

    public Function getMethodAddTpBtaRawFunction(byte[] rawTpBta) throws ContractException {
        final Function function = new Function(FUNC_ADDTPBTA, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawTpBta)), 
                Arrays.<TypeReference<?>>asList());
        return function;
    }

    public String getSignedTransactionForAddTpBta(byte[] rawTpBta) {
        final Function function = new Function(
                FUNC_ADDTPBTA, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawTpBta)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return createSignedTransaction(function);
    }

    public String addTpBta(byte[] rawTpBta, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDTPBTA, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawTpBta)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return asyncExecuteTransaction(function, callback);
    }

    public Tuple1<byte[]> getAddTpBtaInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDTPBTA, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = this.functionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>(

                (byte[]) results.get(0).getValue()
                );
    }

    public byte[] bcdnsCertMap(String param0) throws ContractException {
        final Function function = new Function(FUNC_BCDNSCERTMAP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public Function getMethodBcdnsCertMapRawFunction(String param0) throws ContractException {
        final Function function = new Function(FUNC_BCDNSCERTMAP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return function;
    }

    public byte[] getLatestTpBta(byte[] tpbtaLane) throws ContractException {
        final Function function = new Function(FUNC_GETLATESTTPBTA, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(tpbtaLane)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public Function getMethodGetLatestTpBtaRawFunction(byte[] tpbtaLane) throws ContractException {
        final Function function = new Function(FUNC_GETLATESTTPBTA, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(tpbtaLane)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return function;
    }

    public byte[] getPTCTrustRoot(byte[] ptcOwnerOid) throws ContractException {
        final Function function = new Function(FUNC_GETPTCTRUSTROOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(ptcOwnerOid)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public Function getMethodGetPTCTrustRootRawFunction(byte[] ptcOwnerOid) throws
            ContractException {
        final Function function = new Function(FUNC_GETPTCTRUSTROOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(ptcOwnerOid)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return function;
    }

    public byte[] getPTCVerifyAnchor(byte[] ptcOwnerOid, BigInteger versionNum) throws
            ContractException {
        final Function function = new Function(FUNC_GETPTCVERIFYANCHOR, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(ptcOwnerOid), 
                new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint256(versionNum)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public Function getMethodGetPTCVerifyAnchorRawFunction(byte[] ptcOwnerOid,
            BigInteger versionNum) throws ContractException {
        final Function function = new Function(FUNC_GETPTCVERIFYANCHOR, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(ptcOwnerOid), 
                new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint256(versionNum)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return function;
    }

    public List getSupportedPTCType() throws ContractException {
        final Function function = new Function(FUNC_GETSUPPORTEDPTCTYPE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint8>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public Function getMethodGetSupportedPTCTypeRawFunction() throws ContractException {
        final Function function = new Function(FUNC_GETSUPPORTEDPTCTYPE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint8>>() {}));
        return function;
    }

    public byte[] getTpBta(byte[] tpbtaLane, BigInteger tpBtaVersion) throws ContractException {
        final Function function = new Function(FUNC_GETTPBTA, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(tpbtaLane), 
                new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint32(tpBtaVersion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public Function getMethodGetTpBtaRawFunction(byte[] tpbtaLane, BigInteger tpBtaVersion) throws
            ContractException {
        final Function function = new Function(FUNC_GETTPBTA, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(tpbtaLane), 
                new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint32(tpBtaVersion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return function;
    }

    public Boolean hasPTCTrustRoot(byte[] ptcOwnerOid) throws ContractException {
        final Function function = new Function(FUNC_HASPTCTRUSTROOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(ptcOwnerOid)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public Function getMethodHasPTCTrustRootRawFunction(byte[] ptcOwnerOid) throws
            ContractException {
        final Function function = new Function(FUNC_HASPTCTRUSTROOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(ptcOwnerOid)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return function;
    }

    public Boolean hasPTCVerifyAnchor(byte[] ptcOwnerOid, BigInteger versionNum) throws
            ContractException {
        final Function function = new Function(FUNC_HASPTCVERIFYANCHOR, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(ptcOwnerOid), 
                new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint256(versionNum)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public Function getMethodHasPTCVerifyAnchorRawFunction(byte[] ptcOwnerOid,
            BigInteger versionNum) throws ContractException {
        final Function function = new Function(FUNC_HASPTCVERIFYANCHOR, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(ptcOwnerOid), 
                new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint256(versionNum)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return function;
    }

    public Boolean hasTpBta(byte[] tpbtaLane, BigInteger tpBtaVersion) throws ContractException {
        final Function function = new Function(FUNC_HASTPBTA, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(tpbtaLane), 
                new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint32(tpBtaVersion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public Function getMethodHasTpBtaRawFunction(byte[] tpbtaLane, BigInteger tpBtaVersion) throws
            ContractException {
        final Function function = new Function(FUNC_HASTPBTA, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(tpbtaLane), 
                new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint32(tpBtaVersion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return function;
    }

    public TransactionReceipt init(byte[] rawRootBcdnsCert) {
        final Function function = new Function(
                FUNC_INIT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawRootBcdnsCert)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return executeTransaction(function);
    }

    public Function getMethodInitRawFunction(byte[] rawRootBcdnsCert) throws ContractException {
        final Function function = new Function(FUNC_INIT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawRootBcdnsCert)), 
                Arrays.<TypeReference<?>>asList());
        return function;
    }

    public String getSignedTransactionForInit(byte[] rawRootBcdnsCert) {
        final Function function = new Function(
                FUNC_INIT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawRootBcdnsCert)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return createSignedTransaction(function);
    }

    public String init(byte[] rawRootBcdnsCert, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INIT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawRootBcdnsCert)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return asyncExecuteTransaction(function, callback);
    }

    public Tuple1<byte[]> getInitInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INIT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = this.functionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>(

                (byte[]) results.get(0).getValue()
                );
    }

    public String owner() throws ContractException {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public Function getMethodOwnerRawFunction() throws ContractException {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return function;
    }

    public String ownerOidToBcdnsDomainSpaceMap(byte[] param0) throws ContractException {
        final Function function = new Function(FUNC_OWNEROIDTOBCDNSDOMAINSPACEMAP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public Function getMethodOwnerOidToBcdnsDomainSpaceMapRawFunction(byte[] param0) throws
            ContractException {
        final Function function = new Function(FUNC_OWNEROIDTOBCDNSDOMAINSPACEMAP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return function;
    }

    public byte[] ptcTrustRootMap(byte[] param0) throws ContractException {
        final Function function = new Function(FUNC_PTCTRUSTROOTMAP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public Function getMethodPtcTrustRootMapRawFunction(byte[] param0) throws ContractException {
        final Function function = new Function(FUNC_PTCTRUSTROOTMAP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return function;
    }

    public BigInteger ptcTypeSupported(BigInteger param0) throws ContractException {
        final Function function = new Function(FUNC_PTCTYPESUPPORTED, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public Function getMethodPtcTypeSupportedRawFunction(BigInteger param0) throws
            ContractException {
        final Function function = new Function(FUNC_PTCTYPESUPPORTED, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return function;
    }

    public TransactionReceipt removePtcVerifier(BigInteger ptcType) {
        final Function function = new Function(
                FUNC_REMOVEPTCVERIFIER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint8(ptcType)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return executeTransaction(function);
    }

    public Function getMethodRemovePtcVerifierRawFunction(BigInteger ptcType) throws
            ContractException {
        final Function function = new Function(FUNC_REMOVEPTCVERIFIER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint8(ptcType)), 
                Arrays.<TypeReference<?>>asList());
        return function;
    }

    public String getSignedTransactionForRemovePtcVerifier(BigInteger ptcType) {
        final Function function = new Function(
                FUNC_REMOVEPTCVERIFIER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint8(ptcType)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return createSignedTransaction(function);
    }

    public String removePtcVerifier(BigInteger ptcType, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMOVEPTCVERIFIER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint8(ptcType)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return asyncExecuteTransaction(function, callback);
    }

    public Tuple1<BigInteger> getRemovePtcVerifierInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMOVEPTCVERIFIER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        List<Type> results = this.functionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt renounceOwnership() {
        final Function function = new Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return executeTransaction(function);
    }

    public Function getMethodRenounceOwnershipRawFunction() throws ContractException {
        final Function function = new Function(FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList());
        return function;
    }

    public String getSignedTransactionForRenounceOwnership() {
        final Function function = new Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return createSignedTransaction(function);
    }

    public String renounceOwnership(TransactionCallback callback) {
        final Function function = new Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return asyncExecuteTransaction(function, callback);
    }

    public BigInteger tpBtaMap(byte[] param0) throws ContractException {
        final Function function = new Function(FUNC_TPBTAMAP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public Function getMethodTpBtaMapRawFunction(byte[] param0) throws ContractException {
        final Function function = new Function(FUNC_TPBTAMAP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return function;
    }

    public TransactionReceipt transferOwnership(String newOwner) {
        final Function function = new Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.Address(newOwner)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return executeTransaction(function);
    }

    public Function getMethodTransferOwnershipRawFunction(String newOwner) throws
            ContractException {
        final Function function = new Function(FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.Address(newOwner)), 
                Arrays.<TypeReference<?>>asList());
        return function;
    }

    public String getSignedTransactionForTransferOwnership(String newOwner) {
        final Function function = new Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.Address(newOwner)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return createSignedTransaction(function);
    }

    public String transferOwnership(String newOwner, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.Address(newOwner)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return asyncExecuteTransaction(function, callback);
    }

    public Tuple1<String> getTransferOwnershipInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = this.functionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt updatePTCTrustRoot(byte[] rawPtcTrustRoot) {
        final Function function = new Function(
                FUNC_UPDATEPTCTRUSTROOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawPtcTrustRoot)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return executeTransaction(function);
    }

    public Function getMethodUpdatePTCTrustRootRawFunction(byte[] rawPtcTrustRoot) throws
            ContractException {
        final Function function = new Function(FUNC_UPDATEPTCTRUSTROOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawPtcTrustRoot)), 
                Arrays.<TypeReference<?>>asList());
        return function;
    }

    public String getSignedTransactionForUpdatePTCTrustRoot(byte[] rawPtcTrustRoot) {
        final Function function = new Function(
                FUNC_UPDATEPTCTRUSTROOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawPtcTrustRoot)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return createSignedTransaction(function);
    }

    public String updatePTCTrustRoot(byte[] rawPtcTrustRoot, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEPTCTRUSTROOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawPtcTrustRoot)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return asyncExecuteTransaction(function, callback);
    }

    public Tuple1<byte[]> getUpdatePTCTrustRootInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEPTCTRUSTROOT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = this.functionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>(

                (byte[]) results.get(0).getValue()
                );
    }

    public String verifierMap(BigInteger param0) throws ContractException {
        final Function function = new Function(FUNC_VERIFIERMAP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint8(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public Function getMethodVerifierMapRawFunction(BigInteger param0) throws ContractException {
        final Function function = new Function(FUNC_VERIFIERMAP, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Uint8(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return function;
    }

    public TransactionReceipt verifyProof(byte[] rawTpProof) {
        final Function function = new Function(
                FUNC_VERIFYPROOF, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawTpProof)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return executeTransaction(function);
    }

    public Function getMethodVerifyProofRawFunction(byte[] rawTpProof) throws ContractException {
        final Function function = new Function(FUNC_VERIFYPROOF, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawTpProof)), 
                Arrays.<TypeReference<?>>asList());
        return function;
    }

    public String getSignedTransactionForVerifyProof(byte[] rawTpProof) {
        final Function function = new Function(
                FUNC_VERIFYPROOF, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawTpProof)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return createSignedTransaction(function);
    }

    public String verifyProof(byte[] rawTpProof, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_VERIFYPROOF, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawTpProof)), 
                Collections.<TypeReference<?>>emptyList(), 0);
        return asyncExecuteTransaction(function, callback);
    }

    public Tuple1<byte[]> getVerifyProofInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_VERIFYPROOF, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = this.functionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>(

                (byte[]) results.get(0).getValue()
                );
    }

    public static PtcHub load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new PtcHub(contractAddress, client, credential);
    }

    public static PtcHub deploy(Client client, CryptoKeyPair credential, byte[] rawRootBcdnsCert)
            throws ContractException {
        byte[] encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.fisco.bcos.sdk.v3.codec.datatypes.DynamicBytes(rawRootBcdnsCert)));
        return deploy(PtcHub.class, client, credential, getBinary(client.getCryptoSuite()), getABI(), encodedConstructor, null);
    }

    public static class CrossChainChannel extends DynamicStruct {
        public String senderDomain;

        public String receiverDomain;

        public CrossChainChannel(Utf8String senderDomain, Utf8String receiverDomain) {
            super(senderDomain,receiverDomain);
            this.senderDomain = senderDomain.getValue();
            this.receiverDomain = receiverDomain.getValue();
        }

        public CrossChainChannel(String senderDomain, String receiverDomain) {
            super(new org.fisco.bcos.sdk.v3.codec.datatypes.Utf8String(senderDomain),new org.fisco.bcos.sdk.v3.codec.datatypes.Utf8String(receiverDomain));
            this.senderDomain = senderDomain;
            this.receiverDomain = receiverDomain;
        }
    }

    public static class CrossChainLane extends DynamicStruct {
        public CrossChainChannel channel;

        public byte[] senderId;

        public byte[] receiverId;

        public CrossChainLane(CrossChainChannel channel, Bytes32 senderId, Bytes32 receiverId) {
            super(channel,senderId,receiverId);
            this.channel = channel;
            this.senderId = senderId.getValue();
            this.receiverId = receiverId.getValue();
        }

        public CrossChainLane(CrossChainChannel channel, byte[] senderId, byte[] receiverId) {
            super(channel,new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Bytes32(senderId),new org.fisco.bcos.sdk.v3.codec.datatypes.generated.Bytes32(receiverId));
            this.channel = channel;
            this.senderId = senderId;
            this.receiverId = receiverId;
        }
    }

    public static class AddPtcVerifierEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ptcType;

        public String verifierAddress;
    }

    public static class InitializedEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger version;
    }

    public static class LatestTpBtaEventResponse {
        public TransactionReceipt.Logs log;

        public byte[] laneHash;

        public BigInteger version;
    }

    public static class NewBcdnsCertEventResponse {
        public TransactionReceipt.Logs log;

        public byte[] ownerOid;
    }

    public static class NewPtrTrustRootEventResponse {
        public TransactionReceipt.Logs log;

        public byte[] ptcOwnerOid;
    }

    public static class NewVerifyAnchorEventResponse {
        public TransactionReceipt.Logs log;

        public byte[] ptcOwnerOid;

        public BigInteger newVersionNum;
    }

    public static class OwnershipTransferredEventResponse {
        public TransactionReceipt.Logs log;

        public String previousOwner;

        public String newOwner;
    }

    public static class RemovePtcVerifierEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ptcType;
    }

    public static class SaveTpBtaEventResponse {
        public TransactionReceipt.Logs log;

        public byte[] laneHash;

        public BigInteger version;
    }

    public static class VerifyProofEventResponse {
        public TransactionReceipt.Logs log;

        public CrossChainLane tpbtaLane;

        public Boolean result;
    }
}
